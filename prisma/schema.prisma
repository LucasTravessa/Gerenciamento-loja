// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String

    @@index([name])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    posts         Post[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}


model Employees {
    id           Int @id @default(autoincrement())
    name         String
    email        String
    address      String
    phone_number String
    role         String
    salary       Float
    status       String
    img          String @default("https://i.pravatar.cc/150")
}

model Supplier {
    id            Int @id @default(autoincrement())
    fantasy_name  String
    cpnj          String
    address       String
    phone_number  String
    status        String
    // purchase_transactions      Purchase_transactions[]
}

model Products {
    id                    Int @id @default(autoincrement())
    name                  String
    price                 Float
    on_stock              Float @default(0)
    // purchase_transactions Purchase_transactions[]
    // sales_transactions Sales_transactions[]
}

// model Purchase_transactions {
//     id             Int @id @default(autoincrement())
//     products       Products[] @relation(fields: [products_id], references: [id])
//     products_id    Int[]
//     supplier       Supplier  @relation(fields: [supplier_id], references: [id])
//     supplier_id    Int @unique
//     value_spent    Float
// }

// model Sales_transactions{
//     id          Int @id @default(autoincrement())
//     client      String
//     value_made  Float
//     products    Products[] @relation(fields: [products_id], references: [id])
//     products_id Int[]
// }